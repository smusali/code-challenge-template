[tool.poetry]
name = "weather-data-engineering-api"
version = "0.1.0"
description = "A comprehensive data engineering solution for ingesting, analyzing, and serving weather data through a REST API"
authors = ["Samir Musali <samir.musali@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/smusali/weather-data-engineering-api"
repository = "https://github.com/smusali/weather-data-engineering-api"
packages = [{include = "src"}, {include = "core_django"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
django = "^4.2.7"
psycopg2-binary = "^2.9.9"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
python-dotenv = "^1.0.0"
httpx = "^0.25.2"
python-multipart = "^0.0.6"
asgiref = "^3.7.2"
jinja2 = "^3.1.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-django = "^4.7.0"
black = "^23.11.0"
isort = "^5.12.0"
ruff = "^0.1.6"
mypy = "^1.7.1"
pre-commit = "^3.6.0"
django-stubs = "^4.2.7"

[tool.poetry.scripts]
manage-db = "core_django.manage:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = ["E", "W", "F", "I", "C", "B", "UP"]
ignore = ["E501", "B008", "C901", "B904"]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", ".git"]
skips = ["B101", "B601"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "core_django.core.settings"

[tool.pytest.ini_options]
addopts = ["--strict-markers", "--strict-config"]
testpaths = ["tests"]
markers = [
    "unit: unit tests",
    "integration: integration tests",
    "db: tests requiring database",
]
