# Generated by Django 4.2.23 on 2025-07-08 19:32

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("models", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="FileProcessingLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file_path",
                    models.CharField(
                        help_text="Relative path to the processed file", max_length=500
                    ),
                ),
                (
                    "file_name",
                    models.CharField(
                        help_text="Name of the processed file", max_length=255
                    ),
                ),
                (
                    "file_size",
                    models.BigIntegerField(help_text="Size of the file in bytes"),
                ),
                (
                    "file_checksum",
                    models.CharField(
                        help_text="SHA-256 checksum of the file contents", max_length=64
                    ),
                ),
                (
                    "station_id",
                    models.CharField(
                        help_text="Weather station ID extracted from filename",
                        max_length=20,
                    ),
                ),
                (
                    "processing_started_at",
                    models.DateTimeField(help_text="When file processing started"),
                ),
                (
                    "processing_completed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When file processing completed successfully",
                        null=True,
                    ),
                ),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("started", "Processing Started"),
                            ("completed", "Processing Completed"),
                            ("failed", "Processing Failed"),
                            ("skipped", "Processing Skipped"),
                        ],
                        default="started",
                        help_text="Current processing status",
                        max_length=20,
                    ),
                ),
                (
                    "total_lines",
                    models.IntegerField(
                        default=0, help_text="Total number of lines in the file"
                    ),
                ),
                (
                    "processed_records",
                    models.IntegerField(
                        default=0, help_text="Number of records successfully processed"
                    ),
                ),
                (
                    "skipped_records",
                    models.IntegerField(
                        default=0, help_text="Number of records skipped due to errors"
                    ),
                ),
                (
                    "duplicate_records",
                    models.IntegerField(
                        default=0, help_text="Number of duplicate records found"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if processing failed"
                    ),
                ),
                (
                    "error_count",
                    models.IntegerField(
                        default=0,
                        help_text="Number of errors encountered during processing",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "File Processing Log",
                "verbose_name_plural": "File Processing Logs",
                "db_table": "file_processing_logs",
                "indexes": [
                    models.Index(
                        fields=["file_path"], name="file_proces_file_pa_6083a8_idx"
                    ),
                    models.Index(
                        fields=["file_checksum"], name="file_proces_file_ch_38069b_idx"
                    ),
                    models.Index(
                        fields=["station_id"], name="file_proces_station_35b35a_idx"
                    ),
                    models.Index(
                        fields=["processing_status"],
                        name="file_proces_process_7533e5_idx",
                    ),
                    models.Index(
                        fields=["processing_started_at"],
                        name="file_proces_process_a418aa_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="file_proces_created_317401_idx"
                    ),
                ],
                "unique_together": {("file_path", "file_checksum")},
            },
        ),
        migrations.CreateModel(
            name="RecordChecksum",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "station_id",
                    models.CharField(help_text="Weather station ID", max_length=20),
                ),
                ("date", models.DateField(help_text="Date of the weather observation")),
                (
                    "content_hash",
                    models.CharField(
                        help_text="SHA-256 hash of the record content", max_length=64
                    ),
                ),
                (
                    "source_file",
                    models.CharField(
                        help_text="Source file where this record was first processed",
                        max_length=255,
                    ),
                ),
                (
                    "processing_batch",
                    models.CharField(
                        blank=True,
                        help_text="Processing batch identifier",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "daily_weather",
                    models.OneToOneField(
                        help_text="Associated daily weather record",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="record_checksum",
                        to="models.dailyweather",
                    ),
                ),
            ],
            options={
                "verbose_name": "Record Checksum",
                "verbose_name_plural": "Record Checksums",
                "db_table": "record_checksums",
                "indexes": [
                    models.Index(
                        fields=["station_id", "date"],
                        name="record_chec_station_aa0ea8_idx",
                    ),
                    models.Index(
                        fields=["content_hash"], name="record_chec_content_a39ed1_idx"
                    ),
                    models.Index(
                        fields=["source_file"], name="record_chec_source__2a906a_idx"
                    ),
                    models.Index(
                        fields=["processing_batch"],
                        name="record_chec_process_e853a4_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="record_chec_created_aadfbf_idx"
                    ),
                ],
                "unique_together": {("station_id", "date", "content_hash")},
            },
        ),
    ]
