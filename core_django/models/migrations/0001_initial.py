# Generated by Django 4.2.23 on 2025-07-07 19:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CropYield",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="YearlyWeatherStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WeatherStation",
            fields=[
                (
                    "station_id",
                    models.CharField(
                        help_text="Weather station identifier (e.g., USC00110072)",
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Human-readable station name",
                        max_length=255,
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Station latitude in decimal degrees",
                        max_digits=9,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-90.0),
                            django.core.validators.MaxValueValidator(90.0),
                        ],
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="Station longitude in decimal degrees",
                        max_digits=9,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-180.0),
                            django.core.validators.MaxValueValidator(180.0),
                        ],
                    ),
                ),
                (
                    "elevation",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Station elevation in meters",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, help_text="US state abbreviation", max_length=2
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Weather Station",
                "verbose_name_plural": "Weather Stations",
                "db_table": "weather_stations",
                "indexes": [
                    models.Index(fields=["state"], name="weather_sta_state_1a2c04_idx"),
                    models.Index(
                        fields=["created_at"], name="weather_sta_created_54800d_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="DailyWeather",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(help_text="Date of the weather observation")),
                (
                    "max_temp",
                    models.IntegerField(
                        blank=True,
                        help_text="Maximum temperature in tenths of degrees Celsius. NULL if missing (-9999 in source)",
                        null=True,
                    ),
                ),
                (
                    "min_temp",
                    models.IntegerField(
                        blank=True,
                        help_text="Minimum temperature in tenths of degrees Celsius. NULL if missing (-9999 in source)",
                        null=True,
                    ),
                ),
                (
                    "precipitation",
                    models.IntegerField(
                        blank=True,
                        help_text="Precipitation in tenths of millimeters. NULL if missing (-9999 in source)",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "station",
                    models.ForeignKey(
                        help_text="Weather station that recorded this observation",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_records",
                        to="models.weatherstation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Daily Weather Record",
                "verbose_name_plural": "Daily Weather Records",
                "db_table": "daily_weather",
                "indexes": [
                    models.Index(
                        fields=["station", "date"],
                        name="daily_weath_station_d26de8_idx",
                    ),
                    models.Index(fields=["date"], name="daily_weath_date_7ecf90_idx"),
                    models.Index(
                        fields=["station", "date", "max_temp"],
                        name="daily_weath_station_f660b5_idx",
                    ),
                    models.Index(
                        fields=["station", "date", "min_temp"],
                        name="daily_weath_station_50e70c_idx",
                    ),
                    models.Index(
                        fields=["station", "date", "precipitation"],
                        name="daily_weath_station_208c37_idx",
                    ),
                ],
                "unique_together": {("station", "date")},
            },
        ),
    ]
